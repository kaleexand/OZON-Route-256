'''
Маски
Никита собирается открывать свой пункт выдачи заказов. Для обеспечения безопасности посетителей Никита решил обеспечить ПВЗ
одноразовыми медицинскими масками, которые будут поставляться каждый месяц в количестве n штук.
Местные поставщики продают маски по цене 0.55 рублей за одну штуку, но можно сэкономить,
купив упаковку из 24 масок за 11 рублей или коробку из 16 упаковок за 160 рублей.
Помогите Никите, определив, сколько коробок, упаковок и отдельных масок он должен купить, чтобы заплатить как можно меньше денег.
Примечание: Никита готов купить больше масок, чем ему нужно, если это позволит сэкономить.
Формат выходных данных
Требуется вывести три числа в одну строку через пробел - количество отдельных масок, упаковок и коробок, которые надо купить.
Примеры
Входные данные:
385
Выходные данные:
1 0 1
Входные данные:
23
Выходные данные:
0 1 0
Входные данные:
27
Выходные данные:
3 1 0
0.55 - 1 шт
11 - 24 шт - упаковка
160 - 16 упаковок - коробка
"количество отдельных масок" - "упаковок" - "коробок"

'''
def main():
    n = int(input())
    count_m = 0
    c_u = 0
    c_k = 0
    pr = 0.55
    u = 24
    u_p = 11
    c = u*16
    pr_u = 160
    a=0
    b=0
    c=0
    count_box=0
    count_p = 0
    count_k =0

    if (n < 20 ):
        a = n * 0.55
        count_p = n
    if (n >=20 and n < 384):
        count_k = n//24
        count_p = (n - (24 * (n//24)))
        b = count_k * 11 + count_p * 0.55
        b1 = count_k * 11 + 11
        if b > b1:
            b = b1
            count_k +=1
            count_p = 0
    if (n > 384):
        c = n//(u*16) * 160
        count_box = n//(u*16)
        ost = n - ((u*16) * (n//(u*16)))
        if ost < 24:
            if (ost < 20 ):
                c += ost * 0.55
                count_p = ost
            else:
                count_k = ost//24
                count_p = (ost - (24 * (ost//24)))
                b = count_k * 11 + count_p * 0.55
                b1 = count_k * 11 + 11
                if b > b1:
                    b = b1
                    count_k +=1
                    count_p = 0                  
        else:
            count_k = ost//24
            count_p = (ost - (24 * (ost//24)))
            b = count_k * 11 + count_p * 0.55
            b1 = count_k * 11 + 11
            if b > b1:
                b = b1
                count_k +=1
                count_p = 0
    print(count_p, count_k, count_box)

if __name__ == '__main__':
    main()

